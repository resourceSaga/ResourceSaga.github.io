{"componentChunkName":"component---src-templates-docs-js","path":"/Python/expert/11 Concurrency - Future","result":{"data":{"site":{"siteMetadata":{"title":"Seoyul Blog | ResourceSaga","docsLocation":"https://github.com/resourceSaga/ResourceSaga.github.io"}},"mdx":{"fields":{"id":"3fa7efc4-640e-50a8-a053-b004761ea388","title":"11 Concurrency Future","slug":"/Python/expert/11 Concurrency - Future"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"11 Concurrency - Future\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB3D9\\uC2DC\\uC131 \\uAC1C\\uB150\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBE44\\uB3D9\\uAE30 \\uC791\\uC5C5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC4F0\\uB808\\uB4DC\\uD480 \\uC2E4\\uC2B5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD504\\uB85C\\uC138\\uC2A4\\uD480 \\uC2E4\\uC2B5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBE14\\uB85D / \\uB17C\\uBE14\\uB85D\")), mdx(\"p\", null, \"\\uC11C\\uB85C \\uB2E4\\uB978 \\uC2A4\\uB808\\uB4DC \\uB610\\uB294 \\uD504\\uB85C\\uC138\\uC2A4\\uC5D0\\uC11C \\uC2E4\\uD589\\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"p\", null, \"\\uB0B4\\uBD80 \\uACFC\\uC815 \\uC54C \\uD544\\uC694 \\uC5C6\\uC73C\\uBA70, \\uACE0\\uC218\\uC900\\uC73C\\uB85C \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uB97C \\uC81C\\uACF5\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from concurrent import future\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ProcessPoolExecutor : GIL \\uC6B0\\uD68C, \\uB0B4\\uBD80\\uC801\\uC73C\\uB85C os.cpu_count() \\uB97C \\uC0AC\\uC6A9\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ThreadPoolExecutor: GIL \\uC885\\uC18D\")), mdx(\"h2\", null, \"Python GIL (Global Interpreter Lock)\"), mdx(\"p\", null, \"GIL \\uC740 \\uD55C \\uBC88\\uC5D0 \\uD558\\uB098\\uC758 \\uC2A4\\uB808\\uB4DC\\uB9CC \\uC218\\uD589 \\uD560 \\uC218 \\uC788\\uAC8C \\uC778\\uD130\\uD504\\uB9AC\\uD130 \\uC790\\uCCB4\\uC5D0\\uC11C \\uB77D\\uC744 \\uAC70\\uB294 \\uAC83.\"), mdx(\"p\", null, \"\\uC608\\uB97C\\uB4E4\\uC5B4 \\uD558\\uB098\\uC758 \\uBCC0\\uC218\\uC5D0 \\uC5EC\\uB7EC\\uAC1C\\uC758 \\uC2A4\\uB808\\uB4DC\\uAC00 \\uC811\\uADFC \\uD558\\uB294 \\uACBD\\uC6B0 \\uB370\\uB4DC\\uB77D \\uAC19\\uC740\\uAC8C \\uBC1C\\uC0DD\\uD560 \\uC218 \\uC788\\uC74C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from concurrent import future\\nworker =  10 #\\uC2A4\\uB808\\uB4DC\\uC218\\n\\n# map \\uC744 \\uC0AC\\uC6A9\\uD574 \\uC2A4\\uB808\\uB4DC\\uB85C \\uD568\\uC218\\uB97C \\uC2E4\\uD589\\uD55C\\uB2E4.\\nwith futures.ThreadPoolExecutor(worker) as excutor:\\n    # map -> \\uC791\\uC5C5 \\uC21C\\uC11C\\uB97C \\uC720\\uC9C0\\uD558\\uACE0 \\uC989\\uC2DC \\uC2E4\\uD589\\n    result_cnt = excutor.map(\\uC791\\uC5C5\\uD568\\uC218, \\uD568\\uC218\\uC758 \\uD30C\\uB77C\\uBBF8\\uD130obj)\\n\")), mdx(\"p\", null, \"\\uD558\\uB098\\uC758 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC5D0 \\uC811\\uADFC\\uD574\\uC11C GIL \\uB54C\\uBB38\\uC5D0 \\uC0DD\\uAE30\\uB294 \\uCEE8\\uD14D\\uC2A4\\uD2B8 \\uC2A4\\uC704\\uCE6D \\uC624\\uBC84\\uD5E4\\uB4DC\\uB97C \\uC6B0\\uD68C\\uD558\\uB294 \\uBC29\\uBC95\\uC740 \\uBA40\\uD2F0 \\uD504\\uB85C\\uC138\\uC2F1 \\uBAA8\\uB4C8\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from concurrent import future\\n\\n# map \\uC744 \\uC0AC\\uC6A9\\uD574 \\uD504\\uB85C\\uC138\\uC2A4\\uB85C \\uD568\\uC218\\uB97C \\uC2E4\\uD589\\uD55C\\uB2E4.\\nwith futures.**ProcessPoolExecutor** () as excutor:\\n    # map -> \\uC791\\uC5C5 \\uC21C\\uC11C\\uB97C \\uC720\\uC9C0\\uD558\\uACE0 \\uC989\\uC2DC \\uC2E4\\uD589\\n    result_cnt = excutor.map(\\uC791\\uC5C5\\uD568\\uC218, \\uD568\\uC218\\uC758 \\uD30C\\uB77C\\uBBF8\\uD130obj)\\n\")), mdx(\"p\", null, \"map \\uC744 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uACE0 \\uD504\\uB85C\\uC138\\uC2A4\\uB97C \\uC2A4\\uCF00\\uC904\\uB9C1 \\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"futures_list = []\\nwith futures.ProcessPoolExecutor() as excutor:\\n        # Submit -> Callable \\uAC1D\\uCCB4 \\uC2A4\\uCF00\\uC974\\uB9C1(\\uC2E4\\uD589 \\uC608\\uC57D) -> Future\\n        # Future -> result(), done(), as_completed() \\uC8FC\\uB85C \\uC0AC\\uC6A9\\n        for nt in sorted(NATION_LS):\\n            # future \\uBC18\\uD658\\n            future = excutor.submit(\\uC791\\uC5C5\\uD568\\uC218, \\uD568\\uC218\\uC758 \\uD30C\\uB77C\\uBBF8\\uD130obj)\\n            # \\uC2A4\\uCF00\\uC974\\uB9C1\\n            futures_list.append(future)\\n\\n                for future in futures.as_completed(futures_list):\\n                        # \\uC2A4\\uCF00\\uC904\\uB9C1\\uC744 \\uD1B5\\uD574 \\uD504\\uB85C\\uC138\\uC2A4\\uC758 \\uC9C4\\uD589\\uC744 \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uB2E4.\\n            result = future.result() # \\uC2E4\\uD589 \\uACB0\\uACFC\\n            done = future.done() # \\uC2E4\\uD589 \\uC131\\uACF5? True \\uB610\\uB294 False\\n            cancelled = future.cancelled # True\\n            # future \\uACB0\\uACFC \\uD655\\uC778\\n            print('Future Result : {}, Done : {}'.format(result, done))\\n            print('Future Cancelled : {}'.format(cancelled))\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#11-concurrency---future","title":"11 Concurrency - Future","items":[{"url":"#python-gil-global-interpreter-lock","title":"Python GIL (Global Interpreter Lock)"}]}]},"parent":{"__typename":"File","relativePath":"Python/expert/11 Concurrency - Future.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/KBI-Financial-DT-Test","title":"KBI 금융 DT 테스트"}}},{"node":{"fields":{"slug":"/Nodejs","title":"Nodejs"}}},{"node":{"fields":{"slug":"/","title":"Welcome Page"}}},{"node":{"fields":{"slug":"/resourcesaga","title":"Self Introduction"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/1udtf","title":"디지털 전환의 이해"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/2dft","title":"디지털 금융 트렌드"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/3dft","title":"디지털 금융 기술"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/4dfm","title":"디지털 금융 마케팅"}}},{"node":{"fields":{"slug":"/Nodejs/Nodejs-intro","title":"Nodejs 개요"}}},{"node":{"fields":{"slug":"/Python","title":"파이썬"}}},{"node":{"fields":{"slug":"/Python/basic","title":"파이썬 기초"}}},{"node":{"fields":{"slug":"/Python/basic/01 개발 환경 설정","title":"01 개발 환경 설정"}}},{"node":{"fields":{"slug":"/Python/basic/02 print 함수","title":"02 Print 함수"}}},{"node":{"fields":{"slug":"/Python/basic/03 파이썬 기반 지식","title":"03 파이썬 기반 지식"}}},{"node":{"fields":{"slug":"/Python/basic/04 가상 환경 설정 및 패키지 설치","title":"04 가상 환경 설정 및 패키지 설치"}}},{"node":{"fields":{"slug":"/Python/basic/05 자료형","title":"05 자료형"}}},{"node":{"fields":{"slug":"/Python/basic/06 함수 및 람다(lambda)","title":"06 함수 및 람다 Lambda"}}},{"node":{"fields":{"slug":"/Python/basic/07 클래스","title":"07 클래스"}}},{"node":{"fields":{"slug":"/Python/basic/08 상속, 다중 상속","title":"08 상속 다중 상속"}}},{"node":{"fields":{"slug":"/Python/basic/09 모듈과 패키지","title":"09 모듈과 패키지"}}},{"node":{"fields":{"slug":"/Python/basic/10 파일 입출력","title":"10 파일 입출력"}}},{"node":{"fields":{"slug":"/Python/basic/11 에러 및 예외 처리","title":"11 에러 및 예외 처리"}}},{"node":{"fields":{"slug":"/Python/basic/12 외부 파일 처리 - csv와 XSL, XLSX","title":"12 외부 파일 처리 Csv와 XSL XLSX"}}},{"node":{"fields":{"slug":"/Python/basic/13 파이썬 SQLite 연동, 테이블 생성 삽입","title":"13 파이썬 SQ Lite 연동 테이블 생성 삽입"}}},{"node":{"fields":{"slug":"/Python/basic/14 테이블 조회, 조건 조회","title":"14 테이블 조회 조건 조회"}}},{"node":{"fields":{"slug":"/Python/basic/15 테이블 수정, 삭제","title":"15 테이블 수정 삭제"}}},{"node":{"fields":{"slug":"/Python/basic/16 타이핑 게임 제작","title":"16 타이핑 게임 제작"}}},{"node":{"fields":{"slug":"/Python/expert/01 class 의 재사용","title":"01 Class 의 재사용"}}},{"node":{"fields":{"slug":"/Python/expert/02 Class 데코레이터","title":"02 Class 데코레이터"}}},{"node":{"fields":{"slug":"/Python/expert/03 파이썬 데이터 모델 - 네임드튜플","title":"03 파이썬 데이터 모델 네임드튜플"}}},{"node":{"fields":{"slug":"/Python/expert/04 파이썬 스페셜 메소드","title":"04 파이썬 스페셜 메소드"}}},{"node":{"fields":{"slug":"/Python/expert/05 시퀀스 자료형","title":"05 시퀀스 자료형"}}},{"node":{"fields":{"slug":"/Python/expert/06-1 함수형 프로그래밍","title":"06 1 함수형 프로그래밍"}}},{"node":{"fields":{"slug":"/Python/expert/06-2 Closure와 Decorator","title":"06 2 Closure와 Decorator"}}},{"node":{"fields":{"slug":"/Python/expert/07 Reference참조형","title":"07 Reference참조형"}}},{"node":{"fields":{"slug":"/Python/expert/08 파이썬 클래스 특별 메소드","title":"08 파이썬 클래스 특별 메소드"}}},{"node":{"fields":{"slug":"/Python/expert/09 파이썬 제너레이터","title":"09 파이썬 제너레이터"}}},{"node":{"fields":{"slug":"/Python/expert/10 코루틴","title":"10 코루틴"}}},{"node":{"fields":{"slug":"/Python/expert/11 Concurrency - Future","title":"11 Concurrency Future"}}},{"node":{"fields":{"slug":"/Python/expert/12 비동기 - async","title":"12 비동기 Async"}}},{"node":{"fields":{"slug":"/Python/expert/pythonic!","title":"Pythonic"}}},{"node":{"fields":{"slug":"/Python/expert","title":"파이썬 심화"}}}]}},"pageContext":{"id":"3fa7efc4-640e-50a8-a053-b004761ea388"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}