{"componentChunkName":"component---src-templates-docs-js","path":"/Python/expert/08 파이썬 클래스 특별 메소드","result":{"data":{"site":{"siteMetadata":{"title":"Seoyul Blog | ResourceSaga","docsLocation":"https://github.com/resourceSaga/ResourceSaga.github.io"}},"mdx":{"fields":{"id":"8ebc10db-7280-5065-89c2-0fe278a7233d","title":"08 파이썬 클래스 특별 메소드","slug":"/Python/expert/08 파이썬 클래스 특별 메소드"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"8 \\uD30C\\uC774\\uC36C \\uD074\\uB798\\uC2A4 \\uD2B9\\uBCC4 \\uBA54\\uC18C\\uB4DC\"), mdx(\"p\", null, \"iter \\uBA54\\uC18C\\uB4DC\\uAC00 \\uC788\\uB2E4\\uB294 \\uAC83\\uC740 for\\uB97C \\uC0AC\\uC6A9\\uD574 \\uC21C\\uD68C\\uD558\\uBA70 next() \\uB97C \\uC774\\uC6A9 \\uD55C\\uB2E4\\uB294 \\uAC83!\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__x\"), \" \\uB4F1 \\uACFC \\uAC19\\uC774 \\uB354\\uBE14 \\uC5B8\\uB354\\uC2A4\\uCF54\\uC5B4 \\uBCC0\\uC218\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"private\"), \" \\uD558\\uB2E4. \\uD30C\\uC774\\uC36C \\uCF54\\uB4DC \\uCEF4\\uBCA4\\uC158\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# \\uD504\\uB85C\\uD37C\\uD2F0 \\uBA54\\uD0C0 \\uB514\\uC2A4\\uD06C\\uB9BD\\uC158. \\uB370\\uCF54\\uB808\\uC774\\uD130\\uB97C \\uD65C\\uC6A9\\uD55C \\uB514\\uC2A4\\uD06C\\uB9BD\\uC158\\uC774 \\uAC78\\uB9AC\\uB294\\uAC83.\\n# class \\uC120\\uC5B8\\nclass VectorP(object):\\n    # private \\uC120\\uC5B8\\n    def __init__(self, x, y):\\n        self.__x = float(x)\\n        self.__y = float(y)\\n\\n    def __iter__(self):\\n        return (i for i in (self.__x, self.__y)) # Generator\\n        \\n      # @property  \\uB9C8\\uCE58 getter\\n    @property\\n    def x(self):\\n        return self.__x\\n    # @x.setter \\uB294 getter\\uC5D0 \\uB530\\uB77C\\uC628\\uB2E4 \\uBB34\\uC870\\uAC74 \\uB4A4\\uC5D0 \\uC704\\uCE58\\uD560 \\uC218 \\uBC16\\uC5D0\\uC5C6\\uB2E4.\\n    # \\uC55E\\uC5D0 \\uC548\\uB428 \\uBC18\\uB4DC\\uC2DC \\uB4A4\\uC5D0 \\uC788\\uAC70\\uB098 \\uC5C6\\uAC70\\uB098\\n    @x.setter\\n    def x(self, v):\\n        self.__x = v\\n\\n    @property\\n    def y(self):\\n        return self.__y\\n\\n    @y.setter\\n    def y(self, v):\\n        if v < -273:\\n            raise ValueError(\\\"Temperature below -273 is not possible\\\")\\n        self.__y = v\\n\\n# \\uAC1D\\uCCB4 \\uC120\\uC5B8\\nv5 = VectorP(20, 40)\\n\\n\")), mdx(\"h2\", null, mdx(\"strong\", {\n    parentName: \"h2\"\n  }, \"slot\")), mdx(\"p\", null, \"\\uD30C\\uC774\\uC36C \\uC778\\uD130\\uD504\\uB9AC\\uD130\\uC5D0 \\uD1B5\\uBCF4\\uD558\\uB294 \\uAE30\\uB2A5\\uC744 \\uD55C\\uB2E4. \\uD574\\uB2F9 \\uD074\\uB798\\uC2A4\\uAC00 \\uAC00\\uC9C0\\uB294 \\uC18D\\uC131\\uC744 \\uC81C\\uD55C\\uD568.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dict\"), \" \\uC18D\\uC131 \\uCD5C\\uC801\\uD654\\uB85C \\uB2E4\\uC218 \\uAC1D\\uCCB4 \\uC0DD\\uC131\\uC2DC \\uBA54\\uBAA8\\uB9AC \\uACF5\\uAC04 \\uD6A8\\uC728 \\uC88B\\uB2E4! \\uC57D 20% \\uC808\\uC57D\"), mdx(\"p\", null, \"\\uD574\\uB2F9 \\uD074\\uB798\\uC2A4\\uC5D0 \\uB9CC\\uB4E4\\uC5B4\\uC9C4 \\uC778\\uC2A4\\uD134\\uC2A4 \\uC18D\\uC131 \\uAD00\\uB9AC\\uC5D0 \\uB515\\uC154\\uB108\\uB9AC \\uB300\\uC2E0 set \\uD615\\uD0DC \\uC0AC\\uC6A9 \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"class TestA(object):\\n    __slots__ = ('a',)\\n\\nclass TestB(object):\\n    pass\\n\\nuse_slot = TestA()\\nno_slot = TestB()\\n\\nprint('EX2-1 -', use_slot)\\n# print('EX2-2 -', use_slot.__dict__)\\nprint('EX2-3 -', no_slot)\\nprint('EX2-4 -', no_slot.__dict__)\\n\\nuse_slot.a = 10\\n# use_slot.b = 10\\n\\n# \\uBA54\\uBAA8\\uB9AC \\uC0AC\\uC6A9\\uB7C9 \\uBE44\\uAD50\\nimport timeit\\n\\n# \\uCE21\\uC815\\uC744 \\uC704\\uD55C \\uD568\\uC218 \\uC120\\uC5B8\\ndef repeat_outer(obj):\\n    def repeat_inner():\\n        obj.a = 'test'\\n        del obj.a\\n    return repeat_inner\\n\\nprint('EX3-1 -', min(timeit.repeat(repeat_outer(use_slot), number=1000)))\\nprint('EX3-2 -', min(timeit.repeat(repeat_outer(no_slot), number=1000)))\\n\\nprint()\\nprint()\\n\\n# \\uAC1D\\uCCB4 \\uC2AC\\uB77C\\uC774\\uC2F1\\nclass ObjectS:\\n    def __init__(self):\\n        self._numbers = [n for n in range(1, 10000, 3)]\\n    \\n    def __len__(self):\\n        return len(self._numbers)\\n\\n    def __getitem__(self, idx):\\n        return self._numbers[idx]\\n\\ns = ObjectS()\\n\\nprint('EX3-1 -', s.__dict__)\\nprint('EX3-2 -', len(s._numbers))\\nprint('EX3-3 -', len(s))\\nprint('EX3-4 -', s[1:10])\\nprint('EX3-5 -', s[-1])\\nprint('EX3-6 -', s[::10])\\n\")), mdx(\"h2\", null, \"\\uD30C\\uC774\\uC36C \\uCD94\\uC0C1 \\uD074\\uB798\\uC2A4\"), mdx(\"p\", null, \"\\uCC38\\uACE0 : \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.python.org/3/library/collections.abc.html\"\n  }), \"https://docs.python.org/3/library/collections.abc.html\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"# Sequence \\uC0C1\\uC18D \\uBC1B\\uC9C0 \\uC54A\\uC558\\uC9C0\\uB9CC, \\uC790\\uB3D9\\uC73C\\uB85C __iter__, __contains__ \\uAE30\\uB2A5 \\uC791\\uB3D9\\n# \\uAC1D\\uCCB4 \\uC804\\uCCB4\\uB97C \\uC790\\uB3D9\\uC73C\\uB85C \\uC870\\uC0AC -> \\uC2DC\\uD000\\uC2A4 \\uD504\\uB85C\\uD1A0\\uCF5C\\nfrom collections.abc import Sequence\\n# Sequence \\uC0C1\\uC18D \\n# \\uC694\\uAD6C\\uC0AC\\uD56D\\uC778 \\uCD94\\uC0C1\\uBA54\\uC18C\\uB4DC \\uBAA8\\uB450 \\uAD6C\\uD604\\uD574\\uC57C \\uB3D9\\uC791\\n\\n# \\uC2AC\\uB77C\\uC774\\uC2F1 \\uAC00\\uB2A5\\uD55C \\uAC1D\\uCCB4 \\uAD6C\\uD604\\nclass IterTestB(Sequence):\\n    def __getitem__(self, idx):\\n        return range(1, 50, 2)[idx] # range(1, 50, 2)\\n\\n    def __len__(self, idx):\\n        return len(range(1, 50, 2)[idx])\\n\\ni2 = IterTestB()\\n\\nprint(i2[4])\\n\")), mdx(\"h3\", null, \"\\uCD94\\uC0C1 \\uD074\\uB798\\uC2A4 \\uB9CC\\uB4E4\\uAE30 \\uD65C\\uC6A9\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"import abc\\n\\nclass RandomMachine(abc.ABC): # metaclass=abc.ABCMeta (3.4 \\uC774\\uD558 \\uBC84\\uC804)\\n    # __metaclass__ = abc.ABCMeta\\n    \\n    # \\uCD94\\uC0C1 \\uBA54\\uC18C\\uB4DC\\n    @abc.abstractmethod\\n    def load(self, iterobj):\\n        '''iterable \\uD56D\\uBAA9 \\uCD94\\uAC00'''\\n    \\n\\n    # \\uCD94\\uC0C1 \\uBA54\\uC18C\\uB4DC\\n    @abc.abstractmethod\\n    def pick(self, iterobj):\\n        '''\\uBB34\\uC791\\uC704 \\uD56D\\uBAA9 \\uBF51\\uAE30'''\\n    \\n    def inspect(self):\\n        items = []\\n        while True:\\n            try:\\n                items.append(self.pick())\\n            except LookupError:\\n                break\\n        return tuple(sorted(items))\\n\")), mdx(\"p\", null, \"\\uCD94\\uC0C1 \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D\\uBC1B\\uC544 \\uC0AC\\uC6A9\\uD558\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"import random\\n\\nclass CraneMachine(RandomMachine):\\n    def __init__(self, items):\\n        self._randomizer = random.SystemRandom()\\n        self._items = []\\n        self.load(items)\\n    \\n    def load(self, items):\\n        self._items.extend(items)\\n        self._randomizer.shuffle(self._items)\\n    \\n    def pick(self):\\n        try:\\n            return self._items.pop()\\n        except IndexError:\\n            raise LookupError('Empty Crane Box.')\\n    \\n    def __call__(self):\\n        return self.pick()\\n\")), mdx(\"p\", null, \"\\uAD6C\\uD604\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"# \\uC11C\\uBE0C \\uD074\\uB798\\uC2A4 \\uD655\\uC778\\n# issubclass(obj_x, obj_y) obj_x \\uAC00 obj_y \\uC790\\uC2DD \\uD074\\uB798\\uC2A4\\uC77C\\uB54C True\\nprint(issubclass(RandomMachine, CraneMachine))\\n# False\\nprint(issubclass(CraneMachine, RandomMachine))\\n# True\\n\\n# \\uC0C1\\uC18D \\uAD6C\\uC870 \\uD655\\uC778\\nprint(CraneMachine.__mro__)\\n# (<class '__main__.CraneMachine'>, <class '__main__.RandomMachine'>, <class 'abc.ABC'>, <class 'object'>)\\n\\ncm = CraneMachine(range(1,100)) # \\uCD94\\uC0C1\\uBA54\\uC18C\\uB4DC \\uAD6C\\uD604 \\uC548\\uD558\\uBA74 \\uC5D0\\uB7EC\\n\\nprint(cm._items)\\nprint(cm.pick())\\nprint(cm())\\nprint(cm.inspect())\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#8-파이썬-클래스-특별-메소드","title":"8 파이썬 클래스 특별 메소드","items":[{"url":"#slot","title":"slot"},{"url":"#파이썬-추상-클래스","title":"파이썬 추상 클래스","items":[{"url":"#추상-클래스-만들기-활용","title":"추상 클래스 만들기 활용"}]}]}]},"parent":{"__typename":"File","relativePath":"Python/expert/08 파이썬 클래스 특별 메소드.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/KBI-Financial-DT-Test","title":"KBI 금융 DT 테스트"}}},{"node":{"fields":{"slug":"/Nodejs","title":"Nodejs"}}},{"node":{"fields":{"slug":"/","title":"Welcome Page"}}},{"node":{"fields":{"slug":"/resourcesaga","title":"Self Introduction"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/1udtf","title":"디지털 전환의 이해"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/2dft","title":"디지털 금융 트렌드"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/3dft","title":"디지털 금융 기술"}}},{"node":{"fields":{"slug":"/KBI-Financial-DT-Test/4dfm","title":"디지털 금융 마케팅"}}},{"node":{"fields":{"slug":"/Nodejs/Nodejs-intro","title":"Nodejs 개요"}}},{"node":{"fields":{"slug":"/Python","title":"파이썬"}}},{"node":{"fields":{"slug":"/Python/basic","title":"파이썬 기초"}}},{"node":{"fields":{"slug":"/Python/basic/01 개발 환경 설정","title":"01 개발 환경 설정"}}},{"node":{"fields":{"slug":"/Python/basic/02 print 함수","title":"02 Print 함수"}}},{"node":{"fields":{"slug":"/Python/basic/03 파이썬 기반 지식","title":"03 파이썬 기반 지식"}}},{"node":{"fields":{"slug":"/Python/basic/04 가상 환경 설정 및 패키지 설치","title":"04 가상 환경 설정 및 패키지 설치"}}},{"node":{"fields":{"slug":"/Python/basic/05 자료형","title":"05 자료형"}}},{"node":{"fields":{"slug":"/Python/basic/06 함수 및 람다(lambda)","title":"06 함수 및 람다 Lambda"}}},{"node":{"fields":{"slug":"/Python/basic/07 클래스","title":"07 클래스"}}},{"node":{"fields":{"slug":"/Python/basic/08 상속, 다중 상속","title":"08 상속 다중 상속"}}},{"node":{"fields":{"slug":"/Python/basic/09 모듈과 패키지","title":"09 모듈과 패키지"}}},{"node":{"fields":{"slug":"/Python/basic/10 파일 입출력","title":"10 파일 입출력"}}},{"node":{"fields":{"slug":"/Python/basic/11 에러 및 예외 처리","title":"11 에러 및 예외 처리"}}},{"node":{"fields":{"slug":"/Python/basic/12 외부 파일 처리 - csv와 XSL, XLSX","title":"12 외부 파일 처리 Csv와 XSL XLSX"}}},{"node":{"fields":{"slug":"/Python/basic/13 파이썬 SQLite 연동, 테이블 생성 삽입","title":"13 파이썬 SQ Lite 연동 테이블 생성 삽입"}}},{"node":{"fields":{"slug":"/Python/basic/14 테이블 조회, 조건 조회","title":"14 테이블 조회 조건 조회"}}},{"node":{"fields":{"slug":"/Python/basic/15 테이블 수정, 삭제","title":"15 테이블 수정 삭제"}}},{"node":{"fields":{"slug":"/Python/basic/16 타이핑 게임 제작","title":"16 타이핑 게임 제작"}}},{"node":{"fields":{"slug":"/Python/expert/01 class 의 재사용","title":"01 Class 의 재사용"}}},{"node":{"fields":{"slug":"/Python/expert/02 Class 데코레이터","title":"02 Class 데코레이터"}}},{"node":{"fields":{"slug":"/Python/expert/03 파이썬 데이터 모델 - 네임드튜플","title":"03 파이썬 데이터 모델 네임드튜플"}}},{"node":{"fields":{"slug":"/Python/expert/04 파이썬 스페셜 메소드","title":"04 파이썬 스페셜 메소드"}}},{"node":{"fields":{"slug":"/Python/expert/05 시퀀스 자료형","title":"05 시퀀스 자료형"}}},{"node":{"fields":{"slug":"/Python/expert/06-1 함수형 프로그래밍","title":"06 1 함수형 프로그래밍"}}},{"node":{"fields":{"slug":"/Python/expert/06-2 Closure와 Decorator","title":"06 2 Closure와 Decorator"}}},{"node":{"fields":{"slug":"/Python/expert/07 Reference참조형","title":"07 Reference참조형"}}},{"node":{"fields":{"slug":"/Python/expert/08 파이썬 클래스 특별 메소드","title":"08 파이썬 클래스 특별 메소드"}}},{"node":{"fields":{"slug":"/Python/expert/09 파이썬 제너레이터","title":"09 파이썬 제너레이터"}}},{"node":{"fields":{"slug":"/Python/expert/10 코루틴","title":"10 코루틴"}}},{"node":{"fields":{"slug":"/Python/expert/11 Concurrency - Future","title":"11 Concurrency Future"}}},{"node":{"fields":{"slug":"/Python/expert/12 비동기 - async","title":"12 비동기 Async"}}},{"node":{"fields":{"slug":"/Python/expert/pythonic!","title":"Pythonic"}}},{"node":{"fields":{"slug":"/Python/expert","title":"파이썬 심화"}}}]}},"pageContext":{"id":"8ebc10db-7280-5065-89c2-0fe278a7233d"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}